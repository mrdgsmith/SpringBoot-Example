group "com.akross.london.akross-property-management"
version "1.0-SNAPSHOT"

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath(group: "org.springframework.boot", name: "spring-boot-gradle-plugin", version: "1.5.5.RELEASE")
    }
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: "project-report"
apply plugin: "org.springframework.boot"
apply plugin: "application"

mainClassName = "com.akross.AkrossPropertyManagementRunner"
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    jacksonVersion = "2.8.9"
    h2Version = "1.4.196"
    jsonpath = "2.4.0"
}

dependencies {
    //tag::jetty[]
    compile(group: "org.springframework.boot", name: "spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile(group: "org.springframework.boot", name: "spring-boot-starter-actuator")
    compile(group: "org.springframework.boot", name: "spring-boot-starter-jetty")
    compile(group: "com.fasterxml.jackson.datatype", name: "jackson-datatype-jsr310", version: "$jacksonVersion")
    compile(group: "org.springframework.boot", name: "spring-boot-starter-data-jpa")
    compile(group: "com.h2database", name: "h2", version: "$h2Version")
    //Test dependencies
    testCompile(group: "org.springframework.boot", name: "spring-boot-starter-test")
    testCompile(group: "com.jayway.jsonpath", name: "json-path-assert", version: "$jsonpath")
}

task runApp(dependsOn: ["clean", "build", "test"], type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = mainClassName
    jvmArgs = ["-Xdebug"
            , "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"]
}

task stage(dependsOn: ["clean", "build", "test", "distZip", "installDist"])
build.mustRunAfter clean

jar {
    baseName = "akrosss-property-management"
    version = project.getVersion()
}